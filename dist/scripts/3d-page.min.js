
import*as THREE from'three';import{OrbitControls}from'OrbitControls';import{GLTFLoader}from'GLTFLoader';import{RectAreaLightHelper}from'RectAreaLightHelper'
import{RectAreaLightUniformsLib}from'RectAreaLightUniformsLib';import{AmbientLight,DirectionalLight}from'three';let linkProduct=new URLSearchParams(window.location.search)
let idProduct=linkProduct.get('idProduct')
const model=document.getElementById('model')
function init(){let wrapper=document.querySelector('.model__container');let height=window.innerHeight;window.addEventListener('resize',function(){height=window.innerHeight
if(window.innerWidth<=870){height=300;}})
const scene=new THREE.Scene()
scene.background=new THREE.Color("#656565");const camera=new THREE.PerspectiveCamera(70,window.innerWidth/window.innerHeight,0.1,1000);const renderer=new THREE.WebGLRenderer({antialias:true})
renderer.setSize(window.innerWidth,window.innerHeight)
renderer.shadowMap.enabled=true;wrapper.appendChild(renderer.domElement)
const loader=new GLTFLoader();loader.load(`../models/model-${idProduct}/scene.gltf`,gltf=>{const model=gltf.scene;scene.add(model);model.traverse(function(node){if(model.isMesh){node.castShadow=true;}})},function(error){console.log('Error: '+error)})
window.addEventListener('resize',onWindowResize,false)
function onWindowResize(){camera.aspect=window.innerWidth/height;camera.updateProjectionMatrix();renderer.setSize(window.innerWidth,height)}
switch(idProduct){case'0':if(window.innerWidth<=870){height=300;camera.fov=20;camera.updateProjectionMatrix();onWindowResize()}else{height=window.innerHeight;camera.fov=35;camera.updateProjectionMatrix();onWindowResize()}
window.addEventListener('resize',function(){if(window.innerWidth>870){height=window.innerHeight;camera.fov=35;camera.updateProjectionMatrix();onWindowResize()}else{height=300;camera.fov=20;camera.updateProjectionMatrix();onWindowResize()}})
decrtLight(scene,0xffffff,2)
light1(scene)
light2(scene)
light3(scene)
light4(scene,10)
const light9=new THREE.HemisphereLight(0x000000,0x4B4F56,1);scene.add(light9)
camera.position.set(-10,3,10)
break;case'1':if(window.innerWidth<=870){height=300;camera.fov=60;camera.updateProjectionMatrix();onWindowResize()}else{height=window.innerHeight;camera.fov=75;camera.updateProjectionMatrix();onWindowResize()}
window.addEventListener('resize',function(){if(window.innerWidth>870){height=window.innerHeight;camera.fov=75;camera.updateProjectionMatrix();onWindowResize()}else{height=300;camera.fov=60;camera.updateProjectionMatrix();onWindowResize()}})
decrtLight(scene,0x000000,10)
light1(scene)
light2(scene)
light3(scene)
light4(scene,4)
rectLight(scene,0xB2956E,2)
const light23=new THREE.HemisphereLight(0x000000,0x4B4F56,1);scene.add(light23)
camera.position.set(2,2,2)
break;case'2':if(window.innerWidth<=870){height=300;camera.fov=50;camera.updateProjectionMatrix();onWindowResize()}else{height=window.innerHeight;camera.fov=75;camera.updateProjectionMatrix();onWindowResize()}
window.addEventListener('resize',function(){if(window.innerWidth>870){height=window.innerHeight;camera.fov=75;camera.updateProjectionMatrix();onWindowResize()}else{height=300;camera.fov=50;camera.updateProjectionMatrix();onWindowResize()}})
decrtLight(scene,0xE4C8A2,0.1)
rectLight(scene)
const light=new THREE.HemisphereLight(0x000000,0x4B4F56,1);scene.add(light)
camera.position.set(40,60,60)
break;case'4':if(window.innerWidth<=870){height=300;camera.fov=40;camera.updateProjectionMatrix();onWindowResize()}else{height=window.innerHeight;camera.fov=75;camera.updateProjectionMatrix();onWindowResize()}
window.addEventListener('resize',function(){if(window.innerWidth>870){height=window.innerHeight;camera.fov=75;camera.updateProjectionMatrix();onWindowResize()}else{height=300;camera.fov=40;camera.updateProjectionMatrix();onWindowResize()}})
camera.position.set(2,2,2)
break;case'5':if(window.innerWidth<=870){height=300;camera.fov=60;camera.updateProjectionMatrix();onWindowResize()}else{height=window.innerHeight;camera.fov=75;camera.updateProjectionMatrix();onWindowResize()}
window.addEventListener('resize',function(){if(window.innerWidth>870){height=window.innerHeight;camera.fov=75;camera.updateProjectionMatrix();onWindowResize()}else{height=300;camera.fov=60;camera.updateProjectionMatrix();onWindowResize()}})
camera.position.set(2,2,2)
break;case'6':if(window.innerWidth<=870){height=300;camera.fov=45;camera.updateProjectionMatrix();onWindowResize()}else{height=window.innerHeight;camera.fov=75;camera.updateProjectionMatrix();onWindowResize()}
window.addEventListener('resize',function(){if(window.innerWidth>870){height=window.innerHeight;camera.fov=75;camera.updateProjectionMatrix();onWindowResize()}else{height=300;camera.fov=45;camera.updateProjectionMatrix();onWindowResize()}})
camera.position.set(1,1,1)
break;case'3':if(window.innerWidth<=870){height=300;camera.fov=70;camera.updateProjectionMatrix();onWindowResize()}else{height=window.innerHeight;camera.fov=75;camera.updateProjectionMatrix();onWindowResize()}
window.addEventListener('resize',function(){if(window.innerWidth>870){height=window.innerHeight;camera.fov=75;camera.updateProjectionMatrix();onWindowResize()}else{height=300;camera.fov=70;camera.updateProjectionMatrix();onWindowResize()}})
camera.position.set(1,1,1)
break;case'7':if(window.innerWidth<=870){height=300;camera.fov=35;camera.updateProjectionMatrix();onWindowResize()}else{height=window.innerHeight;camera.fov=75;camera.updateProjectionMatrix();onWindowResize()}
window.addEventListener('resize',function(){if(window.innerWidth>870){height=window.innerHeight;camera.fov=75;camera.updateProjectionMatrix();onWindowResize()}else{height=300;camera.fov=35;camera.updateProjectionMatrix();onWindowResize()}})
camera.position.set(1,1,3)
break;case'8':if(window.innerWidth<=870){height=300;camera.fov=40;camera.updateProjectionMatrix();onWindowResize()}else{height=window.innerHeight;camera.fov=75;camera.updateProjectionMatrix();onWindowResize()}
window.addEventListener('resize',function(){if(window.innerWidth>870){height=window.innerHeight;camera.fov=75;camera.updateProjectionMatrix();onWindowResize()}else{height=300;camera.fov=40;camera.updateProjectionMatrix();onWindowResize()}})
camera.position.set(400,400,400)
break;}
const controls=new OrbitControls(camera,renderer.domElement);controls.autoRotate=true;controls.autoRotateSpeed=5;controls.enableDamping=true;function animate(){requestAnimationFrame(animate)
renderer.render(scene,camera)}
animate()}
init()
function decrtLight(scene,color,intc){const directionalLight=new THREE.DirectionalLight(color,intc)
directionalLight.position.set(0,1,0);directionalLight.castShadow=true;scene.add(directionalLight)}
function light1(scene){const light=new THREE.PointLight(0xc4c4c4,0.2)
light.position.set(0,300,500)
scene.add(light)}
function light2(scene){const light=new THREE.PointLight(0xc4c4c4,3)
light.position.set(500,100,0)
scene.add(light)}
function light3(scene){const light=new THREE.PointLight(0xc4c4c4,0.2)
light.position.set(0,100,-500)
scene.add(light)}
function light4(scene,intc){const light=new THREE.PointLight(0xffffff,intc)
light.position.set(-500,100,500)
scene.add(light)}
function rectLight(scene,color,intensi,x,y,z){const rectLight=new THREE.RectAreaLight(color,intensi,100,100);rectLight.position.set(50,0,10)
rectLight.rotation.y=Math.PI/1.5;scene.add(rectLight)}
const prodName=document.querySelector('.product-name')
const aboutProduct=document.querySelector('.about-product-3d')
function buildAboutProd(){aboutProduct.insertAdjacentHTML("beforeend",`<p class='about-product__subtitle '>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</p>`)}
buildAboutProd()
function buildMainBlock(){prodName.insertAdjacentHTML("beforeend",`<h1 class='about-product__header '>Product ${idProduct}</h1>`)}
buildMainBlock()