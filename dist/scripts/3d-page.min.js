
import*as THREE from'three';import{OrbitControls}from'OrbitControls';import{GLTFLoader}from'GLTFLoader';import{RectAreaLightHelper}from'RectAreaLightHelper'
import{RectAreaLightUniformsLib}from'RectAreaLightUniformsLib';let linkProduct=new URLSearchParams(window.location.search)
let idProduct=linkProduct.get('idProduct')
const containerProduct=document.getElementById('container-prod-about')
console.log(containerProduct)
function init(){let wrapper=document.querySelector('.model-container');const scene=new THREE.Scene()
scene.background=new THREE.Color("#656565");const camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,0.2,1000);camera.position.set(400,400,400)
const renderer=new THREE.WebGLRenderer({antialias:true})
renderer.setSize(window.innerWidth,window.innerHeight)
wrapper.appendChild(renderer.domElement)
loadModel(scene);shadowLight(scene)
lightSun(scene)
{const light=new THREE.DirectionalLight(0xffffff,0.5);light.position.set(0,1,0);light.castShadow=true;scene.add(light);}
RectAreaLightUniformsLib.init();{const rectLight=new THREE.RectAreaLight(0xffffff,2,25,25);rectLight.position.set(-1,0,-5)
rectLight.rotation.y=Math.PI+Math.PI/4;scene.add(rectLight)}
{const rectLight=new THREE.RectAreaLight(0xffffff,1,100,100);rectLight.position.set(10,0,0)
rectLight.rotation.y=Math.PI-Math.PI/4;scene.add(rectLight)}
const controls=new OrbitControls(camera,renderer.domElement);controls.autoRotate=true;controls.autoRotateSpeed=5;controls.enableDamping=true;window.addEventListener('resize',onWindowResize,false)
function onWindowResize(){camera.aspect=window.innerWidth/window.innerHeight;camera.updateProjectionMatrix();renderer.setSize(window.innerWidth,window.innerHeight)}
function animate(){requestAnimationFrame(animate)
renderer.render(scene,camera)}
animate()}
init()
function shadowLight(scene){const renderer=new THREE.WebGLRenderer();renderer.shadowMap.enabled=true;renderer.shadowMap.type=THREE.PCFSoftShadowMap;const light=new THREE.PointLight(0x777777,0.2,100);light.position.set(0,10,4);light.castShadow=true;scene.add(light);light.shadow.mapSize.width=512;light.shadow.mapSize.height=512;light.shadow.camera.near=0.5;light.shadow.camera.far=500;}
function loadModel(scene){const loader=new GLTFLoader();loader.load(`../models/model-${idProduct}/scene.gltf`,gltf=>{scene.add(gltf.scene);},function(error){console.log('Error: '+error)})}
function lightSun(scene){const light=new THREE.DirectionalLight(0xffffff,2)
light.position.set(-5,3,5)
light.lookAt(0,-1,0)
scene.add(light)}
function buildMainBlock(){containerProduct.insertAdjacentHTML("beforeend",`<h1 class='about-product__header '>Product ${idProduct}</h1>
    <p class='about-product__subtitle'>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</p>
    <button class='about-product__button'>Buy now</button> 
    `)}
buildMainBlock()